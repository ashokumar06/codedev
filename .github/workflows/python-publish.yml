# This workflow will upload a Python Package to PyPI when a release is created
# For CodeDev - Advanced AI Coding Assistant
# Repository: https://github.com/ashokumar06/codedev
# Author: Ashok Kumar (https://ashokumar.in)

name: Upload CodeDev Package to PyPI

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    name: Test CodeDev Package
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
      - name: Checkout CodeDev source
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      - name: Test package installation
        run: |
          pip install -e .
          codedev --version
          cdev --version

  release-build:
    runs-on: ubuntu-latest
    name: Build CodeDev Package
    needs: test

    steps:
      - name: Checkout CodeDev source
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build twine wheel

      - name: Build CodeDev distributions
        run: |
          # Build CodeDev package distributions
          python -m build

      - name: Check package integrity
        run: |
          python -m twine check dist/*

      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: codedev-release-dists
          path: dist/

  pypi-publish:
    runs-on: ubuntu-latest
    name: Publish CodeDev to PyPI
    needs:
      - release-build
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write

    # Dedicated environments with protections for publishing are strongly recommended.
    environment:
      name: pypi
      # CodeDev PyPI project URL
      url: https://pypi.org/project/codedev/${{ github.event.release.name }}

    steps:
      - name: Download CodeDev distributions
        uses: actions/download-artifact@v4
        with:
          name: codedev-release-dists
          path: dist/

      - name: Publish CodeDev to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
          print-hash: true
